var search_data = {"index":{"searchIndex":["actionview","helpers","activerecordextension","classmethods","actsascommentabletest","aliquottopool","annotatemodels","applicationcontroller","applicationhelper","authenticatedgenerator","authenticatedsystem","authenticatedtesthelper","beidenticalwith","benolargerthan","builderhelper","comment","commentsystemtest","commentscontroller","commentshelper","controllerstub","createcomments","dummycontroller","entry","event","existspredicate","exportcount","exportfield","genelist","havepermissions","havetheexactdimensionsof","hijacker","inventorydb","juixe","acts","commentable","classmethods","instancemethods","singletonmethods","matchpath","monkey","movie","mycontroller","object","oligoannotation","oligodesign","oligodesignscontroller","oligoextensions","othercontroller","pilotoligodesign","pilotoligodesignscontroller","plateposition","platetube","platetubescontroller","pool","poolscontroller","project","researcher","researcherscontroller","restfulcomments","commentable","classmethods","commentsextension","instancemethods","singletonmethods","helper","role","rolegenerator","rolegeneratorhelpers","rolerequirementsystem","rolesecurityclassmethods","rolesecurityinstancemethods","rolerequirementtesthelper","rolesgenerator","sessionscontroller","sessionshelper","shroom","storagelocation","storagelocationscontroller","syntholigo","syntholigoscontroller","taggedbuilder","testmigration","testrolecontroller","universalspechelper","uploadcolumn","actioncontrollerextension","activerecordextension","classmethods","assettagextension","configurationproxy","magiccolumns","manipulators","imagescience","rmagick","sanitizedfile","uploadcolumnhelper","uploadedfile","uploadcolumnspechelper","user","usernotifier","userobserver","userscontroller","vector","vectorscontroller","version","versionscontroller","welcomecontroller","yamldb","dump","encodingexception","load","utils","access_denied()","access_denied()","activate()","active?()","acts_as_commentable()","acts_as_restful_commentable()","actual_filename()","add_comment()","add_comment()","add_dependencies_to_application_rb()","add_dependencies_to_test_helper_rb()","add_method_to_user_model()","add_method_to_user_model()","add_migration()","add_migration()","add_options!()","add_role_model()","add_role_requirement_system()","add_roles_and_join_table_fixtures()","add_user()","after_save()","annotate()","annotate_one_file()","append_features()","assert_difference()","assert_fails_with()","assert_no_difference()","assert_passes_with()","assert_user_can_access()","assert_user_cannot_access()","assert_user_cant_access()","assert_users_access()","auth_token()","authenticate()","authenticate()","authenticated?()","authorize_as()","authorized?()","banner()","banner()","banner()","be_identical_with()","be_in_existence()","be_no_larger_than()","before_create()","before_filter()","boolean_columns()","break_clear()","can_comment?()","can_edit?()","can_remove?()","can_view_citations?()","check_if_blank()","check_roles()","chr_target_start()","chunk_records()","class_self_instance()","commentable_path()","comments_ordered_by_submitted()","configure()","content_type()","convert!()","convert_booleans()","cookie_for()","copy_to()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create()","create_()","create_array_from_text_area()","create_reset_code()","created_tagged_field()","crop_resized!()","crop_resized!()","curr_oligo_format?()","current_()","current_user()","current_user=()","current_user_get()","dbg()","debug()","define_conditions()","define_conditions()","define_plate_conditions()","define_plate_conditions()","define_pool_conditions()","delete_incl_children()","delete_reset_code()","descendants()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","destroy()","dir()","disable_logger()","disconnected_model()","div_toggle()","dna_sequence()","do_annotations()","down()","down()","dump()","dump()","dump_table()","dump_table_columns()","dump_table_records()","each_table_page()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","edit()","empty?()","encode()","encrypt()","encrypt()","encrypt_password()","existing_gene_attributes=()","exists?()","export_design()","export_oligos()","failure_message()","failure_message()","failure_message()","failure_message()","failure_message()","failure_message()","file_path()","filename()","filename()","find_all_incl_oligos()","find_all_incl_oligos()","find_all_incl_plate()","find_all_plates()","find_all_pools()","find_all_positions()","find_commentable()","find_comments_by_user()","find_comments_by_user()","find_comments_for()","find_comments_for_commentable()","find_min_and_max_dates()","find_min_and_max_plates()","find_oligos_with_conditions()","find_using_oligo_name_id()","find_with_id_list()","find_with_id_list()","findall_proj()","fld_names()","for_each()","forget_me()","forgot()","format_annot()","get_gene_from_oligo_name()","get_gene_list()","get_id_from_oligo_name()","get_model_names()","get_oligos()","get_schema_info()","habtm_name()","has_role?()","has_rspec?()","have_permissions()","have_the_exact_dimensions_of()","headings()","helper_method()","hijack_class_method()","hijack_instance_method()","hijack_method()","id()","image_column()","image_tag_with_uploaded_file_check()","include_rendered_template()","included()","included()","included()","included()","included()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","index()","insert_content_after()","is_boolean()","last_comments()","list_for_pool()","load()","load()","load_records()","load_table()","location_string()","logged_in?()","login_as()","login_from_basic_auth()","login_from_cookie()","login_from_session()","login_required()","logout()","manifest()","manifest()","manifest()","manipulate!()","match_path()","matches?()","matches?()","matches?()","matches?()","matches?()","matches?()","method_missing()","migrate()","modify_or_add_user_fixtures()","move_to()","move_to_directory()","negative_failure_message()","negative_failure_message()","negative_failure_message()","negative_failure_message()","negative_failure_message()","negative_failure_message()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new()","new_file?()","new_gene_attributes=()","new_params()","new_query()","new_query()","new_query()","new_query()","notimplemented()","oligo_model()","oligo_usage_descr()","original_filename()","param_blank?()","params()","passes_with_params?()","password_required?()","path()","path()","pending?()","plate_array_from_list()","plate_idnum()","plate_number()","plate_or_tube()","plate_where_clause()","polarity()","pool_type()","pool_types()","pool_where_clause()","process!()","process!()","public_path()","public_path()","quote()","quote_table()","read_fixture()","recently_reset?()","redirect_back_or_default()","redirect_to()","reenable_logger()","reflect_on_upload_columns()","relative_path()","relative_store_dir()","relative_tmp_dir()","remember_me()","remember_me_for()","remember_me_until()","remember_token?()","render()","render_image()","render_template()","render_template()","render_template_with_locals()","require_role()","require_role()","reset()","reset_configuration()","reset_notification()","reset_pk_sequence!()","reset_role_requirements!()","reset_role_requirements!()","resize!()","resize!()","restful_comments_for()","restful_comments_include()","restore()","roi_ids_of_selectors()","roles=()","roles_foreign_key()","roles_model_filename()","route_resource()","running()","save_genes()","save_uploaded_files_with_magic_columns()","selector()","set_roles()","set_upload_column_temp_with_magic_columns()","set_upload_column_with_magic_columns()","setup()","setup()","setup_standard_mocking()","setup_version_mocking()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show()","show_oligos()","signup()","size()","sql_conditions_for_range()","sql_where()","sql_where()","store_comment()","store_dir()","store_location()","stub_file()","stub_stringio()","stub_tempfile()","table_column_names()","table_record_count()","table_record_header()","tables()","tagged_form_for()","tempfile?()","test__controllers_dont_share_requirements()","test__for_alias()","test__for_all_except_alias()","test__no_user__role_not_required__returns_true()","test__no_user__role_required__returns_false()","test__required_role_for_all__should_require()","test__url_options_authenticate()","test__url_options_authenticate__nil_value__should_handle()","test__url_options_authenticate__nil_value__should_treat_as_index()","test__url_options_authenticate__no_controller__assumes_self()","test_dummy_test()","test_required_role_for_excluded_actions_only__should_require()","test_required_role_for_if_proc__should_require()","test_required_role_for_some_actions_only__should_require()","test_should_create_()","test_this_plugin()","test_this_plugin()","tmp_dir()","to_html()","to_s()","truncate_table()","unhash()","unhash_records()","up()","up()","update()","update()","update()","update()","update()","update()","update()","update()","update()","upload_column()","upload_column_field()","upload_form_for()","upload_form_tag()","url()","url_for_path()","url_for_with_uploaded_file_check()","url_options_authenticate?()","usel_vector()","user_authorized_for?()","user_login()","users_fixture_filename()","users_foreign_key()","users_model_filename()","users_name()","validates_integrity_of()","vector()","verify_utf8()","version_id_flagged_name()","version_id_name()","version_id_or_default()","version_name()","well_coord()","zip_download()","readme_for_app"],"longSearchIndex":["actionview","actionview::helpers","activerecordextension","activerecordextension::classmethods","actsascommentabletest","aliquottopool","annotatemodels","applicationcontroller","applicationhelper","authenticatedgenerator","authenticatedsystem","authenticatedtesthelper","beidenticalwith","benolargerthan","builderhelper","comment","commentsystemtest","commentscontroller","commentshelper","controllerstub","createcomments","dummycontroller","entry","event","existspredicate","exportcount","exportfield","genelist","havepermissions","havetheexactdimensionsof","hijacker","inventorydb","juixe","juixe::acts","juixe::acts::commentable","juixe::acts::commentable::classmethods","juixe::acts::commentable::instancemethods","juixe::acts::commentable::singletonmethods","matchpath","monkey","movie","mycontroller","object","oligoannotation","oligodesign","oligodesignscontroller","oligoextensions","othercontroller","pilotoligodesign","pilotoligodesignscontroller","plateposition","platetube","platetubescontroller","pool","poolscontroller","project","researcher","researcherscontroller","restfulcomments","restfulcomments::commentable","restfulcomments::commentable::classmethods","restfulcomments::commentable::commentsextension","restfulcomments::commentable::instancemethods","restfulcomments::commentable::singletonmethods","restfulcomments::helper","role","rolegenerator","rolegeneratorhelpers","rolerequirementsystem","rolerequirementsystem::rolesecurityclassmethods","rolerequirementsystem::rolesecurityinstancemethods","rolerequirementtesthelper","rolesgenerator","sessionscontroller","sessionshelper","shroom","storagelocation","storagelocationscontroller","syntholigo","syntholigoscontroller","taggedbuilder","testmigration","testrolecontroller","universalspechelper","uploadcolumn","uploadcolumn::actioncontrollerextension","uploadcolumn::activerecordextension","uploadcolumn::activerecordextension::classmethods","uploadcolumn::assettagextension","uploadcolumn::configurationproxy","uploadcolumn::magiccolumns","uploadcolumn::manipulators","uploadcolumn::manipulators::imagescience","uploadcolumn::manipulators::rmagick","uploadcolumn::sanitizedfile","uploadcolumn::uploadcolumnhelper","uploadcolumn::uploadedfile","uploadcolumnspechelper","user","usernotifier","userobserver","userscontroller","vector","vectorscontroller","version","versionscontroller","welcomecontroller","yamldb","yamldb::dump","yamldb::encodingexception","yamldb::load","yamldb::utils","authenticatedsystem#access_denied()","rolerequirementsystem::rolesecurityinstancemethods#access_denied()","object#activate()","object#active?()","juixe::acts::commentable::classmethods#acts_as_commentable()","restfulcomments::commentable::classmethods#acts_as_restful_commentable()","uploadcolumn::uploadedfile#actual_filename()","juixe::acts::commentable::instancemethods#add_comment()","oligodesignscontroller#add_comment()","rolegeneratorhelpers#add_dependencies_to_application_rb()","rolegeneratorhelpers#add_dependencies_to_test_helper_rb()","rolegenerator#add_method_to_user_model()","rolesgenerator#add_method_to_user_model()","rolegenerator#add_migration()","rolesgenerator#add_migration()","authenticatedgenerator#add_options!()","rolesgenerator#add_role_model()","rolegeneratorhelpers#add_role_requirement_system()","rolesgenerator#add_roles_and_join_table_fixtures()","welcomecontroller#add_user()","userobserver#after_save()","annotatemodels::annotate()","annotatemodels::annotate_one_file()","uploadcolumn::magiccolumns::append_features()","authenticatedtesthelper#assert_difference()","testrolecontroller#assert_fails_with()","authenticatedtesthelper#assert_no_difference()","testrolecontroller#assert_passes_with()","rolerequirementtesthelper#assert_user_can_access()","rolerequirementtesthelper#assert_user_cannot_access()","rolerequirementtesthelper#assert_user_cant_access()","rolerequirementtesthelper#assert_users_access()","object#auth_token()","object::authenticate()","user::authenticate()","user#authenticated?()","authenticatedtesthelper#authorize_as()","authenticatedsystem#authorized?()","authenticatedgenerator#banner()","rolegenerator#banner()","rolesgenerator#banner()","object#be_identical_with()","object#be_in_existence()","object#be_no_larger_than()","comment#before_create()","controllerstub::before_filter()","yamldb::utils::boolean_columns()","applicationhelper#break_clear()","restfulcomments::commentable::commentsextension#can_comment?()","restfulcomments::commentable::commentsextension#can_edit?()","restfulcomments::commentable::commentsextension#can_remove?()","restfulcomments::commentable::commentsextension#can_view_citations?()","applicationcontroller#check_if_blank()","rolerequirementsystem::rolesecurityinstancemethods#check_roles()","oligodesign#chr_target_start()","yamldb::utils::chunk_records()","hijacker#class_self_instance()","comment#commentable_path()","juixe::acts::commentable::instancemethods#comments_ordered_by_submitted()","uploadcolumn::configure()","uploadcolumn::sanitizedfile#content_type()","uploadcolumn::manipulators::rmagick#convert!()","yamldb::utils::convert_booleans()","object#cookie_for()","uploadcolumn::sanitizedfile#copy_to()","commentscontroller#create()","object#create()","platetubescontroller#create()","poolscontroller#create()","researcherscontroller#create()","sessionscontroller#create()","storagelocationscontroller#create()","userscontroller#create()","vectorscontroller#create()","versionscontroller#create()","object#create_()","applicationcontroller#create_array_from_text_area()","user#create_reset_code()","taggedbuilder::created_tagged_field()","uploadcolumn::manipulators::imagescience#crop_resized!()","uploadcolumn::manipulators::rmagick#crop_resized!()","oligoextensions#curr_oligo_format?()","authenticatedsystem#current_()","authenticatedsystem#current_user()","authenticatedsystem#current_user=()","commentscontroller#current_user_get()","object#dbg()","dummycontroller#debug()","oligodesignscontroller#define_conditions()","syntholigoscontroller#define_conditions()","platetubescontroller#define_plate_conditions()","poolscontroller#define_plate_conditions()","poolscontroller#define_pool_conditions()","project#delete_incl_children()","user#delete_reset_code()","comment#descendants()","commentscontroller#destroy()","platetubescontroller#destroy()","poolscontroller#destroy()","researcherscontroller#destroy()","sessionscontroller#destroy()","storagelocationscontroller#destroy()","userscontroller#destroy()","vectorscontroller#destroy()","versionscontroller#destroy()","uploadcolumn::uploadedfile#dir()","yamldb::disable_logger()","uploadcolumnspechelper#disconnected_model()","applicationhelper#div_toggle()","syntholigo#dna_sequence()","annotatemodels::do_annotations()","createcomments::down()","testmigration::down()","yamldb::dump()","yamldb::dump::dump()","yamldb::dump::dump_table()","yamldb::dump::dump_table_columns()","yamldb::dump::dump_table_records()","yamldb::dump::each_table_page()","commentscontroller#edit()","platetubescontroller#edit()","poolscontroller#edit()","researcherscontroller#edit()","storagelocationscontroller#edit()","syntholigoscontroller#edit()","userscontroller#edit()","vectorscontroller#edit()","versionscontroller#edit()","uploadcolumn::sanitizedfile#empty?()","object#encode()","user#encrypt()","user::encrypt()","user#encrypt_password()","project#existing_gene_attributes=()","uploadcolumn::sanitizedfile#exists?()","oligodesignscontroller#export_design()","syntholigoscontroller#export_oligos()","beidenticalwith#failure_message()","benolargerthan#failure_message()","existspredicate#failure_message()","havepermissions#failure_message()","havetheexactdimensionsof#failure_message()","matchpath#failure_message()","object#file_path()","uploadcolumn::sanitizedfile#filename()","uploadcolumn::uploadedfile#filename()","plateposition::find_all_incl_oligos()","platetube::find_all_incl_oligos()","syntholigo::find_all_incl_plate()","platetube::find_all_plates()","pool::find_all_pools()","plateposition::find_all_positions()","comment::find_commentable()","comment::find_comments_by_user()","juixe::acts::commentable::singletonmethods#find_comments_by_user()","juixe::acts::commentable::singletonmethods#find_comments_for()","comment::find_comments_for_commentable()","platetube::find_min_and_max_dates()","platetube::find_min_and_max_plates()","oligodesign::find_oligos_with_conditions()","oligodesign::find_using_oligo_name_id()","oligodesign::find_with_id_list()","syntholigo::find_with_id_list()","project::findall_proj()","exportfield::fld_names()","comment::for_each()","user#forget_me()","userscontroller#forgot()","applicationhelper#format_annot()","oligoextensions#get_gene_from_oligo_name()","oligodesignscontroller#get_gene_list()","oligoextensions#get_id_from_oligo_name()","annotatemodels::get_model_names()","poolscontroller#get_oligos()","annotatemodels::get_schema_info()","rolesgenerator#habtm_name()","user#has_role?()","authenticatedgenerator#has_rspec?()","object#have_permissions()","object#have_the_exact_dimensions_of()","exportfield::headings()","controllerstub::helper_method()","hijacker#hijack_class_method()","hijacker#hijack_instance_method()","hijacker#hijack_method()","user#id()","uploadcolumn::activerecordextension::classmethods#image_column()","uploadcolumn::assettagextension#image_tag_with_uploaded_file_check()","object#include_rendered_template()","authenticatedsystem::included()","rolerequirementsystem::included()","rolerequirementsystem::rolesecurityinstancemethods::included()","uploadcolumn::actioncontrollerextension::included()","uploadcolumn::assettagextension::included()","commentscontroller#index()","oligodesignscontroller#index()","platetubescontroller#index()","poolscontroller#index()","researcherscontroller#index()","storagelocationscontroller#index()","syntholigoscontroller#index()","userscontroller#index()","vectorscontroller#index()","versionscontroller#index()","welcomecontroller#index()","rolegeneratorhelpers#insert_content_after()","yamldb::utils::is_boolean()","restfulcomments::commentable::instancemethods#last_comments()","poolscontroller#list_for_pool()","yamldb::load()","yamldb::load::load()","yamldb::load::load_records()","yamldb::load::load_table()","storagelocation#location_string()","authenticatedsystem#logged_in?()","authenticatedtesthelper#login_as()","authenticatedsystem#login_from_basic_auth()","authenticatedsystem#login_from_cookie()","authenticatedsystem#login_from_session()","authenticatedsystem#login_required()","welcomecontroller#logout()","authenticatedgenerator#manifest()","rolegenerator#manifest()","rolesgenerator#manifest()","uploadcolumn::manipulators::rmagick#manipulate!()","object#match_path()","beidenticalwith#matches?()","benolargerthan#matches?()","existspredicate#matches?()","havepermissions#matches?()","havetheexactdimensionsof#matches?()","matchpath#matches?()","uploadcolumn::configurationproxy#method_missing()","object#migrate()","rolesgenerator#modify_or_add_user_fixtures()","uploadcolumn::sanitizedfile#move_to()","uploadcolumn::uploadedfile#move_to_directory()","beidenticalwith#negative_failure_message()","benolargerthan#negative_failure_message()","existspredicate#negative_failure_message()","havepermissions#negative_failure_message()","havetheexactdimensionsof#negative_failure_message()","matchpath#negative_failure_message()","authenticatedgenerator::new()","beidenticalwith::new()","benolargerthan::new()","havepermissions::new()","havetheexactdimensionsof::new()","hijacker::new()","matchpath::new()","object#new()","researcherscontroller#new()","rolegenerator::new()","rolesgenerator::new()","sessionscontroller#new()","storagelocationscontroller#new()","uploadcolumn::sanitizedfile::new()","uploadcolumn::uploadedfile::new()","user::new()","userscontroller#new()","vectorscontroller#new()","versionscontroller#new()","uploadcolumn::uploadedfile#new_file?()","project#new_gene_attributes=()","poolscontroller#new_params()","oligodesignscontroller#new_query()","platetubescontroller#new_query()","poolscontroller#new_query()","syntholigoscontroller#new_query()","dummycontroller#notimplemented()","version#oligo_model()","plateposition#oligo_usage_descr()","uploadcolumn::sanitizedfile#original_filename()","applicationcontroller#param_blank?()","controllerstub#params()","testrolecontroller#passes_with_params?()","user#password_required?()","uploadcolumn::sanitizedfile#path()","uploadcolumn::uploadedfile#path()","object#pending?()","applicationcontroller#plate_array_from_list()","platetube#plate_idnum()","plateposition#plate_number()","platetube#plate_or_tube()","applicationcontroller#plate_where_clause()","oligodesign#polarity()","pool#pool_type()","pool::pool_types()","applicationcontroller#pool_where_clause()","uploadcolumn::manipulators::imagescience#process!()","uploadcolumn::manipulators::rmagick#process!()","object#public_path()","uploadcolumn::uploadedfile#public_path()","annotatemodels::quote()","yamldb::utils::quote_table()","object#read_fixture()","user#recently_reset?()","authenticatedsystem#redirect_back_or_default()","controllerstub#redirect_to()","yamldb::reenable_logger()","uploadcolumn::activerecordextension::classmethods#reflect_on_upload_columns()","uploadcolumn::uploadedfile#relative_path()","uploadcolumn::uploadedfile#relative_store_dir()","uploadcolumn::uploadedfile#relative_tmp_dir()","user#remember_me()","user#remember_me_for()","user#remember_me_until()","user#remember_token?()","controllerstub#render()","uploadcolumn::actioncontrollerextension#render_image()","rolegenerator#render_template()","rolesgenerator#render_template()","object#render_template_with_locals()","rolerequirementsystem::rolesecurityclassmethods#require_role()","testrolecontroller#require_role()","userscontroller#reset()","uploadcolumn::reset_configuration()","usernotifier#reset_notification()","yamldb::load::reset_pk_sequence!()","rolerequirementsystem::rolesecurityclassmethods#reset_role_requirements!()","testrolecontroller#reset_role_requirements!()","uploadcolumn::manipulators::imagescience#resize!()","uploadcolumn::manipulators::rmagick#resize!()","restfulcomments::helper#restful_comments_for()","restfulcomments::helper#restful_comments_include()","hijacker#restore()","oligodesign#roi_ids_of_selectors()","user#roles=()","rolesgenerator#roles_foreign_key()","rolesgenerator#roles_model_filename()","object#route_resource()","universalspechelper#running()","project#save_genes()","uploadcolumn::magiccolumns#save_uploaded_files_with_magic_columns()","oligodesign#selector()","testrolecontroller#set_roles()","uploadcolumn::magiccolumns#set_upload_column_temp_with_magic_columns()","uploadcolumn::magiccolumns#set_upload_column_with_magic_columns()","object#setup()","testrolecontroller#setup()","uploadcolumnspechelper#setup_standard_mocking()","uploadcolumnspechelper#setup_version_mocking()","commentscontroller#show()","oligodesignscontroller#show()","pilotoligodesignscontroller#show()","platetubescontroller#show()","poolscontroller#show()","researcherscontroller#show()","storagelocationscontroller#show()","syntholigoscontroller#show()","vectorscontroller#show()","versionscontroller#show()","platetubescontroller#show_oligos()","welcomecontroller#signup()","uploadcolumn::sanitizedfile#size()","applicationcontroller#sql_conditions_for_range()","activerecordextension::classmethods#sql_where()","applicationcontroller#sql_where()","applicationcontroller#store_comment()","uploadcolumn::uploadedfile#store_dir()","authenticatedsystem#store_location()","object#stub_file()","object#stub_stringio()","object#stub_tempfile()","yamldb::dump::table_column_names()","yamldb::dump::table_record_count()","yamldb::dump::table_record_header()","yamldb::dump::tables()","builderhelper#tagged_form_for()","uploadcolumn::uploadedfile#tempfile?()","testrolecontroller#test__controllers_dont_share_requirements()","testrolecontroller#test__for_alias()","testrolecontroller#test__for_all_except_alias()","testrolecontroller#test__no_user__role_not_required__returns_true()","testrolecontroller#test__no_user__role_required__returns_false()","testrolecontroller#test__required_role_for_all__should_require()","testrolecontroller#test__url_options_authenticate()","testrolecontroller#test__url_options_authenticate__nil_value__should_handle()","testrolecontroller#test__url_options_authenticate__nil_value__should_treat_as_index()","testrolecontroller#test__url_options_authenticate__no_controller__assumes_self()","object#test_dummy_test()","testrolecontroller#test_required_role_for_excluded_actions_only__should_require()","testrolecontroller#test_required_role_for_if_proc__should_require()","testrolecontroller#test_required_role_for_some_actions_only__should_require()","object#test_should_create_()","actsascommentabletest#test_this_plugin()","commentsystemtest#test_this_plugin()","uploadcolumn::uploadedfile#tmp_dir()","comment#to_html()","uploadcolumn::uploadedfile#to_s()","yamldb::load::truncate_table()","yamldb::utils::unhash()","yamldb::utils::unhash_records()","createcomments::up()","testmigration::up()","commentscontroller#update()","platetubescontroller#update()","poolscontroller#update()","researcherscontroller#update()","storagelocationscontroller#update()","syntholigoscontroller#update()","userscontroller#update()","vectorscontroller#update()","versionscontroller#update()","uploadcolumn::activerecordextension::classmethods#upload_column()","uploadcolumn::uploadcolumnhelper#upload_column_field()","uploadcolumn::uploadcolumnhelper#upload_form_for()","uploadcolumn::uploadcolumnhelper#upload_form_tag()","uploadcolumn::uploadedfile#url()","uploadcolumn::actioncontrollerextension#url_for_path()","uploadcolumn::actioncontrollerextension#url_for_with_uploaded_file_check()","rolerequirementsystem::rolesecurityinstancemethods#url_options_authenticate?()","oligodesign#usel_vector()","rolerequirementsystem::rolesecurityclassmethods#user_authorized_for?()","welcomecontroller#user_login()","rolesgenerator#users_fixture_filename()","rolesgenerator#users_foreign_key()","rolegeneratorhelpers#users_model_filename()","rolegeneratorhelpers#users_name()","uploadcolumn::activerecordextension::classmethods#validates_integrity_of()","oligodesign#vector()","yamldb::verify_utf8()","version#version_id_flagged_name()","version#version_id_name()","version::version_id_or_default()","applicationhelper#version_name()","plateposition#well_coord()","oligodesignscontroller#zip_download()",""],"info":[["ActionView","","ActionView.html","",""],["ActionView::Helpers","","ActionView/Helpers.html","",""],["ActiveRecordExtension","","ActiveRecordExtension.html","",""],["ActiveRecordExtension::ClassMethods","","ActiveRecordExtension/ClassMethods.html","","<p>Add instance methods here as:                                              \n#\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">foo</span> <span class=\"ruby-operator\">...</span>\n</pre>\n"],["ActsAsCommentableTest","","ActsAsCommentableTest.html","",""],["AliquotToPool","","AliquotToPool.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: aliquot_to_pools\n"],["AnnotateModels","","AnnotateModels.html","",""],["ApplicationController","","ApplicationController.html","",""],["ApplicationHelper","","ApplicationHelper.html","",""],["AuthenticatedGenerator","","AuthenticatedGenerator.html","",""],["AuthenticatedSystem","","AuthenticatedSystem.html","",""],["AuthenticatedTestHelper","","AuthenticatedTestHelper.html","",""],["BeIdenticalWith","","BeIdenticalWith.html","",""],["BeNoLargerThan","","BeNoLargerThan.html","",""],["BuilderHelper","","BuilderHelper.html","",""],["Comment","","Comment.html","",""],["CommentSystemTest","","CommentSystemTest.html","",""],["CommentsController","","CommentsController.html","",""],["CommentsHelper","","CommentsHelper.html","",""],["ControllerStub","","ControllerStub.html","",""],["CreateComments","","CreateComments.html","",""],["DummyController","","DummyController.html","",""],["Entry","","Entry.html","",""],["Event","","Event.html","",""],["ExistsPredicate","","ExistsPredicate.html","",""],["ExportCount","","ExportCount.html","","<p>Schema Information\n<p>Table name: export_counts\n\n<pre>id              :integer(4)      not null, primary key\nexport_cnt ...</pre>\n"],["ExportField","","ExportField.html","","<p>Schema Information\n<p>Table name: export_fields\n\n<pre>id           :integer(4)      not null, primary key\nexport_type ...</pre>\n"],["GeneList","","GeneList.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: gene_lists\n"],["HavePermissions","","HavePermissions.html","",""],["HaveTheExactDimensionsOf","","HaveTheExactDimensionsOf.html","",""],["Hijacker","","Hijacker.html","","<p>Hijacker class\n<p>This class is used by RoleRequirementTestHelper to temporarily hijack a\ncontroller action …\n"],["InventoryDB","","InventoryDB.html","",""],["Juixe","","Juixe.html","","<p>ActsAsCommentable\n<p>ActsAsCommentable\n"],["Juixe::Acts","","Juixe/Acts.html","",""],["Juixe::Acts::Commentable","","Juixe/Acts/Commentable.html","",""],["Juixe::Acts::Commentable::ClassMethods","","Juixe/Acts/Commentable/ClassMethods.html","",""],["Juixe::Acts::Commentable::InstanceMethods","","Juixe/Acts/Commentable/InstanceMethods.html","","<p>This module contains instance methods\n<p>This module contains instance methods\n"],["Juixe::Acts::Commentable::SingletonMethods","","Juixe/Acts/Commentable/SingletonMethods.html","","<p>This module contains class methods\n<p>This module contains class methods\n"],["MatchPath","","MatchPath.html","",""],["Monkey","","Monkey.html","",""],["Movie","","Movie.html","",""],["MyController","","MyController.html","",""],["Object","","Object.html","",""],["OligoAnnotation","","OligoAnnotation.html","","<p>Schema Information\n<p>Table name: oligo_annotations\n\n<pre>id                :integer(4)      not null, primary key ...</pre>\n"],["OligoDesign","","OligoDesign.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: oligo_designs\n"],["OligoDesignsController","","OligoDesignsController.html","",""],["OligoExtensions","","OligoExtensions.html","",""],["OtherController","","OtherController.html","",""],["PilotOligoDesign","","PilotOligoDesign.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: pilot_oligo_designs\n"],["PilotOligoDesignsController","","PilotOligoDesignsController.html","",""],["PlatePosition","","PlatePosition.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: plate_positions\n"],["PlateTube","","PlateTube.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: plate_tubes\n"],["PlateTubesController","","PlateTubesController.html","",""],["Pool","","Pool.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: pools\n"],["PoolsController","","PoolsController.html","",""],["Project","","Project.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: projects\n"],["Researcher","","Researcher.html","","<p>Schema Information\n<p>Table name: researchers\n\n<pre>id                  :integer(4)      not null, primary key\nresearcher_name ...</pre>\n"],["ResearchersController","","ResearchersController.html","",""],["RestfulComments","","RestfulComments.html","","<p>RestfulComments\n"],["RestfulComments::Commentable","","RestfulComments/Commentable.html","",""],["RestfulComments::Commentable::ClassMethods","","RestfulComments/Commentable/ClassMethods.html","",""],["RestfulComments::Commentable::CommentsExtension","","RestfulComments/Commentable/CommentsExtension.html","",""],["RestfulComments::Commentable::InstanceMethods","","RestfulComments/Commentable/InstanceMethods.html","",""],["RestfulComments::Commentable::SingletonMethods","","RestfulComments/Commentable/SingletonMethods.html","",""],["RestfulComments::Helper","","RestfulComments/Helper.html","",""],["Role","","Role.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: roles\n"],["RoleGenerator","","RoleGenerator.html","",""],["RoleGeneratorHelpers","","RoleGeneratorHelpers.html","",""],["RoleRequirementSystem","","RoleRequirementSystem.html","","<p>Main module for authentication.\n<p>Include this in ApplicationController to activate RoleRequirement\n<p>See  …\n"],["RoleRequirementSystem::RoleSecurityClassMethods","","RoleRequirementSystem/RoleSecurityClassMethods.html","",""],["RoleRequirementSystem::RoleSecurityInstanceMethods","","RoleRequirementSystem/RoleSecurityInstanceMethods.html","",""],["RoleRequirementTestHelper","","RoleRequirementTestHelper.html","","<p>Include this is test_helper.rb to enable test-case helper support for\nRoleRequirement via:\n\n<pre>include RoleRequirementTestHelper</pre>\n"],["RolesGenerator","","RolesGenerator.html","",""],["SessionsController","","SessionsController.html","","<p>This controller handles the login/logout function of the site.\n"],["SessionsHelper","","SessionsHelper.html","",""],["Shroom","","Shroom.html","",""],["StorageLocation","","StorageLocation.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: storage_locations\n"],["StorageLocationsController","","StorageLocationsController.html","",""],["SynthOligo","","SynthOligo.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: synth_oligos\n"],["SynthOligosController","","SynthOligosController.html","",""],["TaggedBuilder","","TaggedBuilder.html","",""],["TestMigration","","TestMigration.html","",""],["TestRoleController","","TestRoleController.html","",""],["UniversalSpecHelper","","UniversalSpecHelper.html","",""],["UploadColumn","","UploadColumn.html","",""],["UploadColumn::ActionControllerExtension","","UploadColumn/ActionControllerExtension.html","",""],["UploadColumn::ActiveRecordExtension","","UploadColumn/ActiveRecordExtension.html","",""],["UploadColumn::ActiveRecordExtension::ClassMethods","","UploadColumn/ActiveRecordExtension/ClassMethods.html","",""],["UploadColumn::AssetTagExtension","","UploadColumn/AssetTagExtension.html","",""],["UploadColumn::ConfigurationProxy","","UploadColumn/ConfigurationProxy.html","",""],["UploadColumn::MagicColumns","","UploadColumn/MagicColumns.html","",""],["UploadColumn::Manipulators","","UploadColumn/Manipulators.html","",""],["UploadColumn::Manipulators::ImageScience","","UploadColumn/Manipulators/ImageScience.html","",""],["UploadColumn::Manipulators::RMagick","","UploadColumn/Manipulators/RMagick.html","",""],["UploadColumn::SanitizedFile","","UploadColumn/SanitizedFile.html","","<p>Sanitize is a base class that takes care of all the dirtywork when dealing\nwith file uploads. it is subclassed …\n"],["UploadColumn::UploadColumnHelper","","UploadColumn/UploadColumnHelper.html","",""],["UploadColumn::UploadedFile","","UploadColumn/UploadedFile.html","","<p>When you call an upload_column field, an instance of this class will be\nreturned.\n<p>Suppose a <code>User</code> model …\n"],["UploadColumnSpecHelper","","UploadColumnSpecHelper.html","",""],["User","","User.html","",""],["UserNotifier","","UserNotifier.html","",""],["UserObserver","","UserObserver.html","",""],["UsersController","","UsersController.html","",""],["Vector","","Vector.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: vectors\n"],["VectorsController","","VectorsController.html","",""],["Version","","Version.html","","<p>Schema Information\n<p>Schema version: 20090121183010\n<p>Table name: versions\n"],["VersionsController","","VersionsController.html","",""],["WelcomeController","","WelcomeController.html","",""],["YamlDb","","YamlDb.html","",""],["YamlDb::Dump","","YamlDb/Dump.html","",""],["YamlDb::EncodingException","","YamlDb/EncodingException.html","",""],["YamlDb::Load","","YamlDb/Load.html","",""],["YamlDb::Utils","","YamlDb/Utils.html","",""],["access_denied","AuthenticatedSystem","AuthenticatedSystem.html#method-i-access_denied","()","<p>Redirect as appropriate when an access request fails.\n<p>The default action is to redirect to the login screen. …\n"],["access_denied","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-i-access_denied","()",""],["activate","Object","Object.html#method-i-activate","()","<p>Activates the user in the database.\n"],["active?","Object","Object.html#method-i-active-3F","()",""],["acts_as_commentable","Juixe::Acts::Commentable::ClassMethods","Juixe/Acts/Commentable/ClassMethods.html#method-i-acts_as_commentable","()",""],["acts_as_restful_commentable","RestfulComments::Commentable::ClassMethods","RestfulComments/Commentable/ClassMethods.html#method-i-acts_as_restful_commentable","( options = {}, &extension )",""],["actual_filename","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-actual_filename","()",""],["add_comment","Juixe::Acts::Commentable::InstanceMethods","Juixe/Acts/Commentable/InstanceMethods.html#method-i-add_comment","(comment)","<p>Helper method that defaults the submitted time.\n"],["add_comment","OligoDesignsController","OligoDesignsController.html#method-i-add_comment","()","<p>*******************************************************************************************#\n\n<pre>Method for ...</pre>\n"],["add_dependencies_to_application_rb","RoleGeneratorHelpers","RoleGeneratorHelpers.html#method-i-add_dependencies_to_application_rb","()",""],["add_dependencies_to_test_helper_rb","RoleGeneratorHelpers","RoleGeneratorHelpers.html#method-i-add_dependencies_to_test_helper_rb","()",""],["add_method_to_user_model","RoleGenerator","RoleGenerator.html#method-i-add_method_to_user_model","(m)",""],["add_method_to_user_model","RolesGenerator","RolesGenerator.html#method-i-add_method_to_user_model","(m)",""],["add_migration","RoleGenerator","RoleGenerator.html#method-i-add_migration","(m)",""],["add_migration","RolesGenerator","RolesGenerator.html#method-i-add_migration","(m)",""],["add_options!","AuthenticatedGenerator","AuthenticatedGenerator.html#method-i-add_options-21","(opt)",""],["add_role_model","RolesGenerator","RolesGenerator.html#method-i-add_role_model","(m)",""],["add_role_requirement_system","RoleGeneratorHelpers","RoleGeneratorHelpers.html#method-i-add_role_requirement_system","(m)",""],["add_roles_and_join_table_fixtures","RolesGenerator","RolesGenerator.html#method-i-add_roles_and_join_table_fixtures","(m)",""],["add_user","WelcomeController","WelcomeController.html#method-i-add_user","()",""],["after_save","UserObserver","UserObserver.html#method-i-after_save","(user)","<p>def after_create(user)\n\n<pre>UserNotifier.deliver_signup_notification(user)</pre>\n<p>end\n"],["annotate","AnnotateModels","AnnotateModels.html#method-c-annotate","(klass, header)","<p>Given the name of an ActiveRecord class, create a schema info block\n(basically a comment containing information …\n"],["annotate_one_file","AnnotateModels","AnnotateModels.html#method-c-annotate_one_file","(file_name, info_block)","<p>Add a schema block to a file. If the file already contains a schema info\nblock (a comment starting with …\n"],["append_features","UploadColumn::MagicColumns","UploadColumn/MagicColumns.html#method-c-append_features","(base)",""],["assert_difference","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-assert_difference","(expressions, difference = 1, message = nil, &block)","<p>taken from edge rails / rails 2.0. Only needed on Rails 1.2.3\n"],["assert_fails_with","TestRoleController","TestRoleController.html#method-i-assert_fails_with","(params = {})",""],["assert_no_difference","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-assert_no_difference","(expressions, message = nil, &block)","<p>taken from edge rails / rails 2.0. Only needed on Rails 1.2.3\n"],["assert_passes_with","TestRoleController","TestRoleController.html#method-i-assert_passes_with","(params = {})",""],["assert_user_can_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_user_can_access","(user, actions, params = {})","<p>Makes sure a user can access the given action\n<p>Example:\n\n<pre>assert_user_can_access(:quentin, &quot;index&quot;)</pre>\n"],["assert_user_cannot_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_user_cannot_access","(user, actions, params = {})",""],["assert_user_cant_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_user_cant_access","(user, actions, params = {})","<p>Makes sure a user cant access the given action\n<p>Example:\n\n<pre>assert_user_cant_access(:quentin, &quot;destroy&quot;, :listing_id ...</pre>\n"],["assert_users_access","RoleRequirementTestHelper","RoleRequirementTestHelper.html#method-i-assert_users_access","(users_access_list, actions, params = {})","<p>Check a list of users against a set of actions with parameters.\n<p>Parameters:\n\n<pre>users_access_list - a hash ...</pre>\n"],["auth_token","Object","Object.html#method-i-auth_token","(token)",""],["authenticate","Object","Object.html#method-c-authenticate","(login, password)","<p>Authenticates a user by their login name and unencrypted password.  Returns\nthe user or nil.\n"],["authenticate","User","User.html#method-c-authenticate","(login, password)","<p>Authenticates a user by their login name and unencrypted password.  Returns\nthe user or nil.\n"],["authenticated?","User","User.html#method-i-authenticated-3F","(password)",""],["authorize_as","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-authorize_as","(user)",""],["authorized?","AuthenticatedSystem","AuthenticatedSystem.html#method-i-authorized-3F","()","<p>Check if the user is authorized\n<p>Override this method in your controllers if you want to restrict access …\n"],["banner","AuthenticatedGenerator","AuthenticatedGenerator.html#method-i-banner","()","<p>Override with your own usage banner.\n"],["banner","RoleGenerator","RoleGenerator.html#method-i-banner","()",""],["banner","RolesGenerator","RolesGenerator.html#method-i-banner","()",""],["be_identical_with","Object","Object.html#method-i-be_identical_with","(expected)",""],["be_in_existence","Object","Object.html#method-i-be_in_existence","()",""],["be_no_larger_than","Object","Object.html#method-i-be_no_larger_than","(width, height)",""],["before_create","Comment","Comment.html#method-i-before_create","()",""],["before_filter","ControllerStub","ControllerStub.html#method-c-before_filter","(*args)",""],["boolean_columns","YamlDb::Utils","YamlDb/Utils.html#method-c-boolean_columns","(table)",""],["break_clear","ApplicationHelper","ApplicationHelper.html#method-i-break_clear","(content=nil)",""],["can_comment?","RestfulComments::Commentable::CommentsExtension","RestfulComments/Commentable/CommentsExtension.html#method-i-can_comment-3F","( commentable, comment, user )",""],["can_edit?","RestfulComments::Commentable::CommentsExtension","RestfulComments/Commentable/CommentsExtension.html#method-i-can_edit-3F","( commentable, comment, user )",""],["can_remove?","RestfulComments::Commentable::CommentsExtension","RestfulComments/Commentable/CommentsExtension.html#method-i-can_remove-3F","( commentable, comment, user )",""],["can_view_citations?","RestfulComments::Commentable::CommentsExtension","RestfulComments/Commentable/CommentsExtension.html#method-i-can_view_citations-3F","( commentable, comment, user )",""],["check_if_blank","ApplicationController","ApplicationController.html#method-i-check_if_blank","(model_object, model_text, param_type='parameters')",""],["check_roles","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-i-check_roles","()",""],["chr_target_start","OligoDesign","OligoDesign.html#method-i-chr_target_start","()",""],["chunk_records","YamlDb::Utils","YamlDb/Utils.html#method-c-chunk_records","(records)",""],["class_self_instance","Hijacker","Hijacker.html#method-i-class_self_instance","()",""],["commentable_path","Comment","Comment.html#method-i-commentable_path","()",""],["comments_ordered_by_submitted","Juixe::Acts::Commentable::InstanceMethods","Juixe/Acts/Commentable/InstanceMethods.html#method-i-comments_ordered_by_submitted","()","<p>Helper method to sort comments by date\n"],["configure","UploadColumn","UploadColumn.html#method-c-configure","()",""],["content_type","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-content_type","()","<p>Returns the content_type of the file as determined through the MIME::Types\nlibrary or through a *nix …\n"],["convert!","UploadColumn::Manipulators::RMagick","UploadColumn/Manipulators/RMagick.html#method-i-convert-21","(format)","<p>Convert the image to format\n"],["convert_booleans","YamlDb::Utils","YamlDb/Utils.html#method-c-convert_booleans","(records, columns)",""],["cookie_for","Object","Object.html#method-i-cookie_for","(<%= file_name %>) auth_token <%= table_name %>(<%= file_name %>).remember_token end end",""],["copy_to","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-copy_to","(path)","<p>Copies the file to ‘path’ and returns a new SanitizedFile that points to\nthe copy.\n"],["create","CommentsController","CommentsController.html#method-i-create","()","<p>POST /comments POST /comments.xml\n"],["create","Object","Object.html#method-i-create","()",""],["create","PlateTubesController","PlateTubesController.html#method-i-create","()","<p>POST /plate_tubes POST /plate_tubes.xml\n"],["create","PoolsController","PoolsController.html#method-i-create","()","<p>POST /pools POST /pools.xml\n"],["create","ResearchersController","ResearchersController.html#method-i-create","()","<p>POST /researchers POST /researchers.xml\n"],["create","SessionsController","SessionsController.html#method-i-create","()",""],["create","StorageLocationsController","StorageLocationsController.html#method-i-create","()","<p>POST /storage_locations POST /storage_locations.xml\n"],["create","UsersController","UsersController.html#method-i-create","()",""],["create","VectorsController","VectorsController.html#method-i-create","()","<p>POST /vectors\n"],["create","VersionsController","VersionsController.html#method-i-create","()","<p>POST /versions\n"],["create_","Object","Object.html#method-i-create_","(<%= file_name %>(options = {})",""],["create_array_from_text_area","ApplicationController","ApplicationController.html#method-i-create_array_from_text_area","(text, ret_type='text')",""],["create_reset_code","User","User.html#method-i-create_reset_code","()",""],["created_tagged_field","TaggedBuilder","TaggedBuilder.html#method-c-created_tagged_field","(method_name)",""],["crop_resized!","UploadColumn::Manipulators::ImageScience","UploadColumn/Manipulators/ImageScience.html#method-i-crop_resized-21","( geometry )","<p>Resize and crop the image so that it will have the exact dimensions passed\nvia geometry, geometry should …\n"],["crop_resized!","UploadColumn::Manipulators::RMagick","UploadColumn/Manipulators/RMagick.html#method-i-crop_resized-21","( geometry )","<p>Resize and crop the image so that it will have the exact dimensions passed\nvia geometry, geometry should …\n"],["curr_oligo_format?","OligoExtensions","OligoExtensions.html#method-i-curr_oligo_format-3F","(oligo_name)","<p>curr_oligo_format?:                                                        \n# Method …\n"],["current_","AuthenticatedSystem","AuthenticatedSystem.html#method-i-current_","(<%= file_name %>=(new_<%= file_name %>) session[:<%= file_name %>_id] = new_<%= file_name %> ? new_<%= file_name %>.id : nil)","<p>Store the given &lt;%= file_name %&gt; id in the session.\n"],["current_user","AuthenticatedSystem","AuthenticatedSystem.html#method-i-current_user","()","<p>Accesses the current user from the session.  Future calls avoid the\ndatabase because nil is not equal …\n"],["current_user=","AuthenticatedSystem","AuthenticatedSystem.html#method-i-current_user-3D","(new_user)","<p>Store the given user id in the session.\n"],["current_user_get","CommentsController","CommentsController.html#method-i-current_user_get","()",""],["dbg","Object","Object.html#method-i-dbg","()",""],["debug","DummyController","DummyController.html#method-i-debug","()",""],["define_conditions","OligoDesignsController","OligoDesignsController.html#method-i-define_conditions","(params, version_id=Version::DESIGN_VERSION_ID)","<p>*******************************************************************************************#\n\n<pre>Populate ...</pre>\n"],["define_conditions","SynthOligosController","SynthOligosController.html#method-i-define_conditions","(params)",""],["define_plate_conditions","PlateTubesController","PlateTubesController.html#method-i-define_plate_conditions","(params)",""],["define_plate_conditions","PoolsController","PoolsController.html#method-i-define_plate_conditions","(plate_string)",""],["define_pool_conditions","PoolsController","PoolsController.html#method-i-define_pool_conditions","(params)",""],["delete_incl_children","Project","Project.html#method-i-delete_incl_children","()",""],["delete_reset_code","User","User.html#method-i-delete_reset_code","()",""],["descendants","Comment","Comment.html#method-i-descendants","()",""],["destroy","CommentsController","CommentsController.html#method-i-destroy","()","<p>DELETE /comments/1 DELETE /comments/1.xml\n"],["destroy","PlateTubesController","PlateTubesController.html#method-i-destroy","()","<p>DELETE /plate_tubes/1 DELETE /plate_tubes/1.xml\n"],["destroy","PoolsController","PoolsController.html#method-i-destroy","()","<p>DELETE /pools/1 DELETE /pools/1.xml\n"],["destroy","ResearchersController","ResearchersController.html#method-i-destroy","()","<p>DELETE /researchers/1 DELETE /researchers/1.xml\n"],["destroy","SessionsController","SessionsController.html#method-i-destroy","()",""],["destroy","StorageLocationsController","StorageLocationsController.html#method-i-destroy","()","<p>DELETE /storage_locations/1 DELETE /storage_locations/1.xml\n"],["destroy","UsersController","UsersController.html#method-i-destroy","()","<p>DELETE /users/1\n"],["destroy","VectorsController","VectorsController.html#method-i-destroy","()","<p>DELETE /vectors/1\n"],["destroy","VersionsController","VersionsController.html#method-i-destroy","()","<p>DELETE /versions/1\n"],["dir","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-dir","()","<p>returns the directory where the file is currently stored.\n"],["disable_logger","YamlDb","YamlDb.html#method-c-disable_logger","()",""],["disconnected_model","UploadColumnSpecHelper","UploadColumnSpecHelper.html#method-i-disconnected_model","(model_class)",""],["div_toggle","ApplicationHelper","ApplicationHelper.html#method-i-div_toggle","(div, div1=nil)",""],["dna_sequence","SynthOligo","SynthOligo.html#method-i-dna_sequence","()",""],["do_annotations","AnnotateModels","AnnotateModels.html#method-c-do_annotations","()","<p>We’re passed a name of things that might be  ActiveRecord models. If we can\nfind the class, and if its …\n"],["down","CreateComments","CreateComments.html#method-c-down","()",""],["down","TestMigration","TestMigration.html#method-c-down","()",""],["dump","YamlDb","YamlDb.html#method-c-dump","(filename)",""],["dump","YamlDb::Dump","YamlDb/Dump.html#method-c-dump","(io)",""],["dump_table","YamlDb::Dump","YamlDb/Dump.html#method-c-dump_table","(io, table)",""],["dump_table_columns","YamlDb::Dump","YamlDb/Dump.html#method-c-dump_table_columns","(io, table)",""],["dump_table_records","YamlDb::Dump","YamlDb/Dump.html#method-c-dump_table_records","(io, table)",""],["each_table_page","YamlDb::Dump","YamlDb/Dump.html#method-c-each_table_page","(table, records_per_page=1000)",""],["edit","CommentsController","CommentsController.html#method-i-edit","()","<p>GET /comments/1;edit GET /comments/1.xml;edit\n"],["edit","PlateTubesController","PlateTubesController.html#method-i-edit","()","<p>GET /plate_tubes/1/edit\n"],["edit","PoolsController","PoolsController.html#method-i-edit","()","<p>GET /pools/1/edit\n"],["edit","ResearchersController","ResearchersController.html#method-i-edit","()","<p>GET /researchers/1/edit\n"],["edit","StorageLocationsController","StorageLocationsController.html#method-i-edit","()","<p>GET /storage_locations/1/edit\n"],["edit","SynthOligosController","SynthOligosController.html#method-i-edit","()","<p>GET /synth_oligos/1/edit\n"],["edit","UsersController","UsersController.html#method-i-edit","()","<p>render edit.html\n"],["edit","VectorsController","VectorsController.html#method-i-edit","()","<p>GET /vectors/1/edit\n"],["edit","VersionsController","VersionsController.html#method-i-edit","()","<p>GET /versions/1/edit\n"],["empty?","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-empty-3F","()","<p>Checks if the file is empty.\n"],["encode","Object","Object.html#method-i-encode","(subject)",""],["encrypt","User","User.html#method-i-encrypt","(password)","<p>Encrypts the password with the user salt\n"],["encrypt","User","User.html#method-c-encrypt","(password, salt)","<p>Encrypts some data with the salt.\n"],["encrypt_password","User","User.html#method-i-encrypt_password","()","<p>before filter\n"],["existing_gene_attributes=","Project","Project.html#method-i-existing_gene_attributes-3D","(gene_attributes)",""],["exists?","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-exists-3F","()","<p>Checks if the file exists\n"],["export_design","OligoDesignsController","OligoDesignsController.html#method-i-export_design","()","<p>*******************************************************************************************#\n\n<pre>Method for ...</pre>\n"],["export_oligos","SynthOligosController","SynthOligosController.html#method-i-export_oligos","()","<p>*******************************************************************************************#\n\n<pre>Method for ...</pre>\n"],["failure_message","BeIdenticalWith","BeIdenticalWith.html#method-i-failure_message","()",""],["failure_message","BeNoLargerThan","BeNoLargerThan.html#method-i-failure_message","()",""],["failure_message","ExistsPredicate","ExistsPredicate.html#method-i-failure_message","()",""],["failure_message","HavePermissions","HavePermissions.html#method-i-failure_message","()",""],["failure_message","HaveTheExactDimensionsOf","HaveTheExactDimensionsOf.html#method-i-failure_message","()",""],["failure_message","MatchPath","MatchPath.html#method-i-failure_message","()",""],["file_path","Object","Object.html#method-i-file_path","( filename )",""],["filename","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-filename","()","<p>Returns the files properly sanitized filename.\n"],["filename","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-filename","()",""],["find_all_incl_oligos","PlatePosition","PlatePosition.html#method-c-find_all_incl_oligos","(condition_array=nil)",""],["find_all_incl_oligos","PlateTube","PlateTube.html#method-c-find_all_incl_oligos","(condition_array=nil)",""],["find_all_incl_plate","SynthOligo","SynthOligo.html#method-c-find_all_incl_plate","(condition_array=nil)",""],["find_all_plates","PlateTube","PlateTube.html#method-c-find_all_plates","(condition_array=nil)",""],["find_all_pools","Pool","Pool.html#method-c-find_all_pools","(condition_array=nil)",""],["find_all_positions","PlatePosition","PlatePosition.html#method-c-find_all_positions","(condition_array=nil)",""],["find_commentable","Comment","Comment.html#method-c-find_commentable","(commentable_str, commentable_id)","<p>Helper class method to look up a commentable object given the commentable\nclass name and id\n"],["find_comments_by_user","Comment","Comment.html#method-c-find_comments_by_user","(user)","<p>Helper class method to lookup all comments assigned to all commentable\ntypes for a given user.\n"],["find_comments_by_user","Juixe::Acts::Commentable::SingletonMethods","Juixe/Acts/Commentable/SingletonMethods.html#method-i-find_comments_by_user","(user)","<p>Helper class method to lookup comments for the mixin commentable type\nwritten by a given user.\n<p>This method …\n"],["find_comments_for","Juixe::Acts::Commentable::SingletonMethods","Juixe/Acts/Commentable/SingletonMethods.html#method-i-find_comments_for","(obj)","<p>Helper method to lookup for comments for a given object. This method is\nequivalent to obj.comments.\n"],["find_comments_for_commentable","Comment","Comment.html#method-c-find_comments_for_commentable","(commentable_str, commentable_id)","<p>Helper class method to look up all comments for  commentable class name and\ncommentable id.\n"],["find_min_and_max_dates","PlateTube","PlateTube.html#method-c-find_min_and_max_dates","()",""],["find_min_and_max_plates","PlateTube","PlateTube.html#method-c-find_min_and_max_plates","()",""],["find_oligos_with_conditions","OligoDesign","OligoDesign.html#method-c-find_oligos_with_conditions","(condition_array, version_id=Version::DESIGN_VERSION_ID)",""],["find_using_oligo_name_id","OligoDesign","OligoDesign.html#method-c-find_using_oligo_name_id","(oligo_name)","<p>****************************************************************************************#\n\n<pre>Class find methods ...</pre>\n"],["find_with_id_list","OligoDesign","OligoDesign.html#method-c-find_with_id_list","(id_list)",""],["find_with_id_list","SynthOligo","SynthOligo.html#method-c-find_with_id_list","(id_list)",""],["findall_proj","Project","Project.html#method-c-findall_proj","()",""],["fld_names","ExportField","ExportField.html#method-c-fld_names","(xfmt=EXPORT_FMT)",""],["for_each","Comment","Comment.html#method-c-for_each","( comments, &block )","<p>Применяет блок кода к каждому узлу дерева из списка\n"],["forget_me","User","User.html#method-i-forget_me","()",""],["forgot","UsersController","UsersController.html#method-i-forgot","()",""],["format_annot","ApplicationHelper","ApplicationHelper.html#method-i-format_annot","(qc=nil, annot=nil)",""],["get_gene_from_oligo_name","OligoExtensions","OligoExtensions.html#method-i-get_gene_from_oligo_name","(oligo_name, curr_format=nil)","<p>get_gene_from_oligo_name:                                                  \n# Method …\n"],["get_gene_list","OligoDesignsController","OligoDesignsController.html#method-i-get_gene_list","()","<p>*******************************************************************************************#\n\n<pre>Ajax method ...</pre>\n"],["get_id_from_oligo_name","OligoExtensions","OligoExtensions.html#method-i-get_id_from_oligo_name","(oligo_name, curr_format=nil, return_fmt='s')","<p>get_id_from_oligo_name:                                                    \n# Method …\n"],["get_model_names","AnnotateModels","AnnotateModels.html#method-c-get_model_names","()","<p>Return a list of the model files to annotate. If we have  command line\narguments, they’re assumed to …\n"],["get_oligos","PoolsController","PoolsController.html#method-i-get_oligos","()",""],["get_schema_info","AnnotateModels","AnnotateModels.html#method-c-get_schema_info","(klass, header)","<p>Use the column information in an ActiveRecord class to create a comment\nblock containing a line for each …\n"],["habtm_name","RolesGenerator","RolesGenerator.html#method-i-habtm_name","()",""],["has_role?","User","User.html#method-i-has_role-3F","(role_in_question, admin='admin_defaults_to_true')","<p>has_role? simply needs to return true or false whether a user has a role or\nnot.\n<p>It may be a good idea …\n"],["has_rspec?","AuthenticatedGenerator","AuthenticatedGenerator.html#method-i-has_rspec-3F","()",""],["have_permissions","Object","Object.html#method-i-have_permissions","(expected)",""],["have_the_exact_dimensions_of","Object","Object.html#method-i-have_the_exact_dimensions_of","(width, height)",""],["headings","ExportField","ExportField.html#method-c-headings","(xfmt=EXPORT_FMT)",""],["helper_method","ControllerStub","ControllerStub.html#method-c-helper_method","(*args)",""],["hijack_class_method","Hijacker","Hijacker.html#method-i-hijack_class_method","(method_name, eval_string = nil, arg_names = [], &block)",""],["hijack_instance_method","Hijacker","Hijacker.html#method-i-hijack_instance_method","(method_name, eval_string = nil, arg_names = [], &block)",""],["hijack_method","Hijacker","Hijacker.html#method-i-hijack_method","(klass, method_name, eval_string = nil, arg_names = [], &block)",""],["id","User","User.html#method-i-id","()",""],["image_column","UploadColumn::ActiveRecordExtension::ClassMethods","UploadColumn/ActiveRecordExtension/ClassMethods.html#method-i-image_column","(name, options={})",""],["image_tag_with_uploaded_file_check","UploadColumn::AssetTagExtension","UploadColumn/AssetTagExtension.html#method-i-image_tag_with_uploaded_file_check","(source, options = {})",""],["include_rendered_template","Object","Object.html#method-i-include_rendered_template","(abs_name, locals = {})",""],["included","AuthenticatedSystem","AuthenticatedSystem.html#method-c-included","(base)","<p>Inclusion hook to make #current_user and #logged_in? available as\nActionView helper methods.\n"],["included","RoleRequirementSystem","RoleRequirementSystem.html#method-c-included","(klass)",""],["included","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-c-included","(klass)",""],["included","UploadColumn::ActionControllerExtension","UploadColumn/ActionControllerExtension.html#method-c-included","(base)",""],["included","UploadColumn::AssetTagExtension","UploadColumn/AssetTagExtension.html#method-c-included","(base)",""],["index","CommentsController","CommentsController.html#method-i-index","()","<p>GET /comments GET /comments.xml\n"],["index","OligoDesignsController","OligoDesignsController.html#method-i-index","()","<p>*******************************************************************************************#\n\n<pre>Method for ...</pre>\n"],["index","PlateTubesController","PlateTubesController.html#method-i-index","()","<p>GET /plate_tubes GET /plate_tubes.xml\n"],["index","PoolsController","PoolsController.html#method-i-index","()","<p>GET /pools GET /pools.xml\n"],["index","ResearchersController","ResearchersController.html#method-i-index","()","<p>GET /researchers GET /researchers.xml\n"],["index","StorageLocationsController","StorageLocationsController.html#method-i-index","()","<p>GET /storage_locations GET /storage_locations.xml\n"],["index","SynthOligosController","SynthOligosController.html#method-i-index","()","<p>GET /synth_oligos\n"],["index","UsersController","UsersController.html#method-i-index","()","<p>render index.rhtml\n"],["index","VectorsController","VectorsController.html#method-i-index","()","<p>GET /vectors\n"],["index","VersionsController","VersionsController.html#method-i-index","()","<p>GET /versions\n"],["index","WelcomeController","WelcomeController.html#method-i-index","()",""],["insert_content_after","RoleGeneratorHelpers","RoleGeneratorHelpers.html#method-i-insert_content_after","(filename, regexp, content_for_insertion, options = {})",""],["is_boolean","YamlDb::Utils","YamlDb/Utils.html#method-c-is_boolean","(value)",""],["last_comments","RestfulComments::Commentable::InstanceMethods","RestfulComments/Commentable/InstanceMethods.html#method-i-last_comments","( count )","<p>Get last comments\n"],["list_for_pool","PoolsController","PoolsController.html#method-i-list_for_pool","()",""],["load","YamlDb","YamlDb.html#method-c-load","(filename)",""],["load","YamlDb::Load","YamlDb/Load.html#method-c-load","(io)",""],["load_records","YamlDb::Load","YamlDb/Load.html#method-c-load_records","(table, column_names, records)",""],["load_table","YamlDb::Load","YamlDb/Load.html#method-c-load_table","(table, data)",""],["location_string","StorageLocation","StorageLocation.html#method-i-location_string","()","<p>validates_uniqueness_of :location_string\n"],["logged_in?","AuthenticatedSystem","AuthenticatedSystem.html#method-i-logged_in-3F","()","<p>Returns true or false if the user is logged in. Preloads @current_user with\nthe user model if they’re …\n"],["login_as","AuthenticatedTestHelper","AuthenticatedTestHelper.html#method-i-login_as","(user)","<p>Sets the current user in the session from the user fixtures.\n"],["login_from_basic_auth","AuthenticatedSystem","AuthenticatedSystem.html#method-i-login_from_basic_auth","()","<p>Called from #current_user.  Now, attempt to login by basic authentication\ninformation.\n"],["login_from_cookie","AuthenticatedSystem","AuthenticatedSystem.html#method-i-login_from_cookie","()","<p>Called from #current_user.  Finaly, attempt to login by an expiring token\nin the cookie.\n"],["login_from_session","AuthenticatedSystem","AuthenticatedSystem.html#method-i-login_from_session","()","<p>Called from #current_user.  First attempt to login by the user id stored in\nthe session.\n"],["login_required","AuthenticatedSystem","AuthenticatedSystem.html#method-i-login_required","()","<p>Filter method to enforce a login requirement.\n<p>To require logins for all actions, use this in your controllers: …\n"],["logout","WelcomeController","WelcomeController.html#method-i-logout","()",""],["manifest","AuthenticatedGenerator","AuthenticatedGenerator.html#method-i-manifest","()",""],["manifest","RoleGenerator","RoleGenerator.html#method-i-manifest","()",""],["manifest","RolesGenerator","RolesGenerator.html#method-i-manifest","()",""],["manipulate!","UploadColumn::Manipulators::RMagick","UploadColumn/Manipulators/RMagick.html#method-i-manipulate-21","()",""],["match_path","Object","Object.html#method-i-match_path","(*expected)","<p>Match a path without bothering whether they are formatted the same way. can\nalso take several parameters, …\n"],["matches?","BeIdenticalWith","BeIdenticalWith.html#method-i-matches-3F","(actual)",""],["matches?","BeNoLargerThan","BeNoLargerThan.html#method-i-matches-3F","(actual)",""],["matches?","ExistsPredicate","ExistsPredicate.html#method-i-matches-3F","(actual)",""],["matches?","HavePermissions","HavePermissions.html#method-i-matches-3F","(actual)",""],["matches?","HaveTheExactDimensionsOf","HaveTheExactDimensionsOf.html#method-i-matches-3F","(actual)",""],["matches?","MatchPath","MatchPath.html#method-i-matches-3F","(actual)",""],["method_missing","UploadColumn::ConfigurationProxy","UploadColumn/ConfigurationProxy.html#method-i-method_missing","(method, value)",""],["migrate","Object","Object.html#method-i-migrate","()",""],["modify_or_add_user_fixtures","RolesGenerator","RolesGenerator.html#method-i-modify_or_add_user_fixtures","(m)",""],["move_to","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-move_to","(path)","<p>Moves the file to ‘path’\n"],["move_to_directory","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-move_to_directory","(dir)","<p>TODO: this is a public method, should be specced\n"],["negative_failure_message","BeIdenticalWith","BeIdenticalWith.html#method-i-negative_failure_message","()",""],["negative_failure_message","BeNoLargerThan","BeNoLargerThan.html#method-i-negative_failure_message","()",""],["negative_failure_message","ExistsPredicate","ExistsPredicate.html#method-i-negative_failure_message","()",""],["negative_failure_message","HavePermissions","HavePermissions.html#method-i-negative_failure_message","()",""],["negative_failure_message","HaveTheExactDimensionsOf","HaveTheExactDimensionsOf.html#method-i-negative_failure_message","()",""],["negative_failure_message","MatchPath","MatchPath.html#method-i-negative_failure_message","()",""],["new","AuthenticatedGenerator","AuthenticatedGenerator.html#method-c-new","(runtime_args, runtime_options = {})",""],["new","BeIdenticalWith","BeIdenticalWith.html#method-c-new","(expected)",""],["new","BeNoLargerThan","BeNoLargerThan.html#method-c-new","(width, height)",""],["new","HavePermissions","HavePermissions.html#method-c-new","(expected)",""],["new","HaveTheExactDimensionsOf","HaveTheExactDimensionsOf.html#method-c-new","(width, height)",""],["new","Hijacker","Hijacker.html#method-c-new","(klass)",""],["new","MatchPath","MatchPath.html#method-c-new","(*expected)",""],["new","Object","Object.html#method-i-new","()","<p>render new.rhtml\n"],["new","ResearchersController","ResearchersController.html#method-i-new","()","<p>GET /researchers/new GET /researchers/new.xml\n"],["new","RoleGenerator","RoleGenerator.html#method-c-new","(runtime_args, runtime_options = {})",""],["new","RolesGenerator","RolesGenerator.html#method-c-new","(runtime_args, runtime_options = {})",""],["new","SessionsController","SessionsController.html#method-i-new","()","<p>render new.rhtml\n"],["new","StorageLocationsController","StorageLocationsController.html#method-i-new","()","<p>GET /storage_locations/new GET /storage_locations/new.xml\n"],["new","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-c-new","(file, options = {})",""],["new","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-c-new","(mode, file, instance, attribute, options={})",""],["new","User","User.html#method-c-new","(params = {})",""],["new","UsersController","UsersController.html#method-i-new","()","<p>render new.rhtml\n"],["new","VectorsController","VectorsController.html#method-i-new","()","<p>GET /vectors/new\n"],["new","VersionsController","VersionsController.html#method-i-new","()","<p>GET /versions/new\n"],["new_file?","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-new_file-3F","()","<p>return true if the file has just been uploaded.\n"],["new_gene_attributes=","Project","Project.html#method-i-new_gene_attributes-3D","(gene_attributes)",""],["new_params","PoolsController","PoolsController.html#method-i-new_params","()",""],["new_query","OligoDesignsController","OligoDesignsController.html#method-i-new_query","()","<p>*******************************************************************************************#\n\n<pre>Methods for ...</pre>\n"],["new_query","PlateTubesController","PlateTubesController.html#method-i-new_query","()",""],["new_query","PoolsController","PoolsController.html#method-i-new_query","()",""],["new_query","SynthOligosController","SynthOligosController.html#method-i-new_query","()","<p>*******************************************************************************************#\n\n<pre>Methods for ...</pre>\n"],["notimplemented","DummyController","DummyController.html#method-i-notimplemented","()",""],["oligo_model","Version","Version.html#method-i-oligo_model","()",""],["oligo_usage_descr","PlatePosition","PlatePosition.html#method-i-oligo_usage_descr","()",""],["original_filename","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-original_filename","()","<p>Returns the filename before sanitation took place\n"],["param_blank?","ApplicationController","ApplicationController.html#method-i-param_blank-3F","(val)",""],["params","ControllerStub","ControllerStub.html#method-i-params","()",""],["passes_with_params?","TestRoleController","TestRoleController.html#method-i-passes_with_params-3F","(params = {})",""],["password_required?","User","User.html#method-i-password_required-3F","()",""],["path","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-path","()","<p>Returns the full path to the file\n"],["path","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-path","()","<p>returns the full path of the file.\n"],["pending?","Object","Object.html#method-i-pending-3F","()","<p>Returns true if the user has just been activated.\n"],["plate_array_from_list","ApplicationController","ApplicationController.html#method-i-plate_array_from_list","(plate_string)",""],["plate_idnum","PlateTube","PlateTube.html#method-i-plate_idnum","()",""],["plate_number","PlatePosition","PlatePosition.html#method-i-plate_number","()",""],["plate_or_tube","PlateTube","PlateTube.html#method-i-plate_or_tube","()",""],["plate_where_clause","ApplicationController","ApplicationController.html#method-i-plate_where_clause","(plate_string)",""],["polarity","OligoDesign","OligoDesign.html#method-i-polarity","()","<p>****************************************************************************************#\n\n<pre>Define virtual ...</pre>\n"],["pool_type","Pool","Pool.html#method-i-pool_type","()",""],["pool_types","Pool","Pool.html#method-c-pool_types","()",""],["pool_where_clause","ApplicationController","ApplicationController.html#method-i-pool_where_clause","(pool_type, pool_string)",""],["process!","UploadColumn::Manipulators::ImageScience","UploadColumn/Manipulators/ImageScience.html#method-i-process-21","(instruction)",""],["process!","UploadColumn::Manipulators::RMagick","UploadColumn/Manipulators/RMagick.html#method-i-process-21","(instruction = nil, &block)",""],["public_path","Object","Object.html#method-i-public_path","( filename )",""],["public_path","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-public_path","()","<p>returns the url of the file, by merging the relative path with the web_root\noption.\n"],["quote","AnnotateModels","AnnotateModels.html#method-c-quote","(value)","<p>Simple quoting for the default column value\n"],["quote_table","YamlDb::Utils","YamlDb/Utils.html#method-c-quote_table","(table)",""],["read_fixture","Object","Object.html#method-i-read_fixture","(action)",""],["recently_reset?","User","User.html#method-i-recently_reset-3F","()",""],["redirect_back_or_default","AuthenticatedSystem","AuthenticatedSystem.html#method-i-redirect_back_or_default","(default)","<p>Redirect to the URI stored by the most recent store_location call or to the\npassed default.\n"],["redirect_to","ControllerStub","ControllerStub.html#method-i-redirect_to","(*redirect_to_params)",""],["reenable_logger","YamlDb","YamlDb.html#method-c-reenable_logger","()",""],["reflect_on_upload_columns","UploadColumn::ActiveRecordExtension::ClassMethods","UploadColumn/ActiveRecordExtension/ClassMethods.html#method-i-reflect_on_upload_columns","()","<p>returns a hash of all UploadColumns defined on the model and their options.\n"],["relative_path","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-relative_path","()","<p>Returns the path of the file relative to :root_dir\n"],["relative_store_dir","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-relative_store_dir","()","<p>Returns the directory where files are stored for this UploadedFile,\nrelative to :root_dir\n"],["relative_tmp_dir","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-relative_tmp_dir","()","<p>Returns the directory where tmp files are stored for this UploadedFile,\nrelative to :root_dir\n"],["remember_me","User","User.html#method-i-remember_me","()","<p>These create and unset the fields required for remembering users between\nbrowser closes\n"],["remember_me_for","User","User.html#method-i-remember_me_for","(time)",""],["remember_me_until","User","User.html#method-i-remember_me_until","(time)",""],["remember_token?","User","User.html#method-i-remember_token-3F","()",""],["render","ControllerStub","ControllerStub.html#method-i-render","(*params)",""],["render_image","UploadColumn::ActionControllerExtension","UploadColumn/ActionControllerExtension.html#method-i-render_image","( file, options = {} )","<p>You can use <code>render_image</code> in your controllers to render an\nimage\n\n<pre class=\"ruby\"><span class=\"ruby-keyword\">def</span> <span class=\"ruby-identifier\">picture</span>\n  <span class=\"ruby-ivar\">@user</span> = <span class=\"ruby-constant\">User</span>.<span class=\"ruby-identifier\">find</span>(<span class=\"ruby-identifier\">params</span>[:<span class=\"ruby-identifier\">id</span>]) <span class=\"ruby-operator\">...</span>\n</pre>\n"],["render_template","RoleGenerator","RoleGenerator.html#method-i-render_template","(name)",""],["render_template","RolesGenerator","RolesGenerator.html#method-i-render_template","(name)",""],["render_template_with_locals","Object","Object.html#method-i-render_template_with_locals","(abs_name, locals = {})","<p>render the RoleRequirementSystem template and “eval it”\n"],["require_role","RoleRequirementSystem::RoleSecurityClassMethods","RoleRequirementSystem/RoleSecurityClassMethods.html#method-i-require_role","(roles, options = {})","<p>Add this to the top of your controller to require a role in order to access\nit. Example Usage:\n\n<pre>require_role ...</pre>\n"],["require_role","TestRoleController","TestRoleController.html#method-i-require_role","(*params)",""],["reset","UsersController","UsersController.html#method-i-reset","()",""],["reset_configuration","UploadColumn","UploadColumn.html#method-c-reset_configuration","()",""],["reset_notification","UserNotifier","UserNotifier.html#method-i-reset_notification","(user)",""],["reset_pk_sequence!","YamlDb::Load","YamlDb/Load.html#method-c-reset_pk_sequence-21","(table_name)",""],["reset_role_requirements!","RoleRequirementSystem::RoleSecurityClassMethods","RoleRequirementSystem/RoleSecurityClassMethods.html#method-i-reset_role_requirements-21","()",""],["reset_role_requirements!","TestRoleController","TestRoleController.html#method-i-reset_role_requirements-21","()",""],["resize!","UploadColumn::Manipulators::ImageScience","UploadColumn/Manipulators/ImageScience.html#method-i-resize-21","( geometry )","<p>Resize the image so that it will not exceed the dimensions passed via\ngeometry, geometry should be a …\n"],["resize!","UploadColumn::Manipulators::RMagick","UploadColumn/Manipulators/RMagick.html#method-i-resize-21","( geometry )","<p>Resize the image so that it will not exceed the dimensions passed via\ngeometry, geometry should be a …\n"],["restful_comments_for","RestfulComments::Helper","RestfulComments/Helper.html#method-i-restful_comments_for","( commentable )",""],["restful_comments_include","RestfulComments::Helper","RestfulComments/Helper.html#method-i-restful_comments_include","( options = {} )",""],["restore","Hijacker","Hijacker.html#method-i-restore","()","<p>restore all\n"],["roi_ids_of_selectors","OligoDesign","OligoDesign.html#method-i-roi_ids_of_selectors","()",""],["roles=","User","User.html#method-i-roles-3D","(value)",""],["roles_foreign_key","RolesGenerator","RolesGenerator.html#method-i-roles_foreign_key","()",""],["roles_model_filename","RolesGenerator","RolesGenerator.html#method-i-roles_model_filename","()",""],["route_resource","Object","Object.html#method-i-route_resource","(*resources)",""],["running","UniversalSpecHelper","UniversalSpecHelper.html#method-i-running","(&block)",""],["save_genes","Project","Project.html#method-i-save_genes","()",""],["save_uploaded_files_with_magic_columns","UploadColumn::MagicColumns","UploadColumn/MagicColumns.html#method-i-save_uploaded_files_with_magic_columns","()",""],["selector","OligoDesign","OligoDesign.html#method-i-selector","()",""],["set_roles","TestRoleController","TestRoleController.html#method-i-set_roles","(roles = \"\")",""],["set_upload_column_temp_with_magic_columns","UploadColumn::MagicColumns","UploadColumn/MagicColumns.html#method-i-set_upload_column_temp_with_magic_columns","(name, path)",""],["set_upload_column_with_magic_columns","UploadColumn::MagicColumns","UploadColumn/MagicColumns.html#method-i-set_upload_column_with_magic_columns","(name, file)",""],["setup","Object","Object.html#method-i-setup","()",""],["setup","TestRoleController","TestRoleController.html#method-i-setup","()",""],["setup_standard_mocking","UploadColumnSpecHelper","UploadColumnSpecHelper.html#method-i-setup_standard_mocking","()",""],["setup_version_mocking","UploadColumnSpecHelper","UploadColumnSpecHelper.html#method-i-setup_version_mocking","()",""],["show","CommentsController","CommentsController.html#method-i-show","()","<p>GET /comments/1 GET /comments/1.xml\n"],["show","OligoDesignsController","OligoDesignsController.html#method-i-show","()","<p>GET /oligo_designs/1\n"],["show","PilotOligoDesignsController","PilotOligoDesignsController.html#method-i-show","()",""],["show","PlateTubesController","PlateTubesController.html#method-i-show","()","<p>GET /plate_tubes/1 GET /plate_tubes/1.xml\n"],["show","PoolsController","PoolsController.html#method-i-show","()","<p>GET /pools/1 GET /pools/1.xml\n"],["show","ResearchersController","ResearchersController.html#method-i-show","()","<p>GET /researchers/1 GET /researchers/1.xml\n"],["show","StorageLocationsController","StorageLocationsController.html#method-i-show","()","<p>GET /storage_locations/1 GET /storage_locations/1.xml\n"],["show","SynthOligosController","SynthOligosController.html#method-i-show","()","<p>GET /synth_oligos/1\n"],["show","VectorsController","VectorsController.html#method-i-show","()","<p>GET /vectors/1\n"],["show","VersionsController","VersionsController.html#method-i-show","()","<p>GET /versions/1\n"],["show_oligos","PlateTubesController","PlateTubesController.html#method-i-show_oligos","()",""],["signup","WelcomeController","WelcomeController.html#method-i-signup","()",""],["size","UploadColumn::SanitizedFile","UploadColumn/SanitizedFile.html#method-i-size","()","<p>Returns the file’s size\n"],["sql_conditions_for_range","ApplicationController","ApplicationController.html#method-i-sql_conditions_for_range","(where_select, where_values, from_fld, to_fld, db_fld, nullok=false)",""],["sql_where","ActiveRecordExtension::ClassMethods","ActiveRecordExtension/ClassMethods.html#method-i-sql_where","(condition_array)","<p>sql_where:                                                                 \n# From array …\n"],["sql_where","ApplicationController","ApplicationController.html#method-i-sql_where","(condition_array)",""],["store_comment","ApplicationController","ApplicationController.html#method-i-store_comment","(model_instance, params)","\n<pre>See ActionController::Base for details \nUncomment this to filter the contents of submitted sensitive ...</pre>\n"],["store_dir","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-store_dir","()","<p>Returns the directory where files are stored for this UploadedFile\n"],["store_location","AuthenticatedSystem","AuthenticatedSystem.html#method-i-store_location","()","<p>Store the URI of the current request in the session.\n<p>We can return to this location by calling #redirect_back_or_default …\n"],["stub_file","Object","Object.html#method-i-stub_file","(filename, mime_type=nil, fake_name=nil)",""],["stub_stringio","Object","Object.html#method-i-stub_stringio","(filename, mime_type=nil, fake_name=nil)",""],["stub_tempfile","Object","Object.html#method-i-stub_tempfile","(filename, mime_type=nil, fake_name=nil)",""],["table_column_names","YamlDb::Dump","YamlDb/Dump.html#method-c-table_column_names","(table)",""],["table_record_count","YamlDb::Dump","YamlDb/Dump.html#method-c-table_record_count","(table)",""],["table_record_header","YamlDb::Dump","YamlDb/Dump.html#method-c-table_record_header","(io)",""],["tables","YamlDb::Dump","YamlDb/Dump.html#method-c-tables","()",""],["tagged_form_for","BuilderHelper","BuilderHelper.html#method-i-tagged_form_for","(name, *args, &block)",""],["tempfile?","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-tempfile-3F","()",""],["test__controllers_dont_share_requirements","TestRoleController","TestRoleController.html#method-i-test__controllers_dont_share_requirements","()",""],["test__for_alias","TestRoleController","TestRoleController.html#method-i-test__for_alias","()",""],["test__for_all_except_alias","TestRoleController","TestRoleController.html#method-i-test__for_all_except_alias","()",""],["test__no_user__role_not_required__returns_true","TestRoleController","TestRoleController.html#method-i-test__no_user__role_not_required__returns_true","()",""],["test__no_user__role_required__returns_false","TestRoleController","TestRoleController.html#method-i-test__no_user__role_required__returns_false","()",""],["test__required_role_for_all__should_require","TestRoleController","TestRoleController.html#method-i-test__required_role_for_all__should_require","()",""],["test__url_options_authenticate","TestRoleController","TestRoleController.html#method-i-test__url_options_authenticate","()",""],["test__url_options_authenticate__nil_value__should_handle","TestRoleController","TestRoleController.html#method-i-test__url_options_authenticate__nil_value__should_handle","()",""],["test__url_options_authenticate__nil_value__should_treat_as_index","TestRoleController","TestRoleController.html#method-i-test__url_options_authenticate__nil_value__should_treat_as_index","()",""],["test__url_options_authenticate__no_controller__assumes_self","TestRoleController","TestRoleController.html#method-i-test__url_options_authenticate__no_controller__assumes_self","()",""],["test_dummy_test","Object","Object.html#method-i-test_dummy_test","()",""],["test_required_role_for_excluded_actions_only__should_require","TestRoleController","TestRoleController.html#method-i-test_required_role_for_excluded_actions_only__should_require","()",""],["test_required_role_for_if_proc__should_require","TestRoleController","TestRoleController.html#method-i-test_required_role_for_if_proc__should_require","()",""],["test_required_role_for_some_actions_only__should_require","TestRoleController","TestRoleController.html#method-i-test_required_role_for_some_actions_only__should_require","()",""],["test_should_create_","Object","Object.html#method-i-test_should_create_","(<%= file_name %> assert_difference '<%= class_name %>.count' do <%= file_name %> = create_<%= file_name %> assert !<%= file_name %>.new_record?, \"#{<%= file_name %>.errors.full_messages.to_sentence}\" end end <% if options[:include_activation] %> def test_should_initialize_activation_code_upon_creation <%= file_name %> = create_<%= file_name %> assert_not_nil <%= file_name %>.reload.activation_code end <% end %><% if options[:stateful] %> def test_should_create_and_start_in_pending_state <%= file_name %> = create_<%= file_name %> assert <%= file_name %>.pending? end <% end %> def test_should_require_login assert_no_difference '<%= class_name %>.count' do u = create_<%= file_name %>(:login => nil))",""],["test_this_plugin","ActsAsCommentableTest","ActsAsCommentableTest.html#method-i-test_this_plugin","()","<p>Replace this with your real tests.\n"],["test_this_plugin","CommentSystemTest","CommentSystemTest.html#method-i-test_this_plugin","()","<p>Replace this with your real tests.\n"],["tmp_dir","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-tmp_dir","()","<p>Returns the directory where tmp files are stored for this UploadedFile\n"],["to_html","Comment","Comment.html#method-i-to_html","()",""],["to_s","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-to_s","()",""],["truncate_table","YamlDb::Load","YamlDb/Load.html#method-c-truncate_table","(table)",""],["unhash","YamlDb::Utils","YamlDb/Utils.html#method-c-unhash","(hash, keys)",""],["unhash_records","YamlDb::Utils","YamlDb/Utils.html#method-c-unhash_records","(records, keys)",""],["up","CreateComments","CreateComments.html#method-c-up","()",""],["up","TestMigration","TestMigration.html#method-c-up","()",""],["update","CommentsController","CommentsController.html#method-i-update","()","<p>PUT /comments/1 PUT /comments/1.xml\n"],["update","PlateTubesController","PlateTubesController.html#method-i-update","()","<p>PUT /plate_tubes/1 PUT /plate_tubes/1.xml\n"],["update","PoolsController","PoolsController.html#method-i-update","()","<p>PUT /pools/1 PUT /pools/1.xml\n"],["update","ResearchersController","ResearchersController.html#method-i-update","()","<p>PUT /researchers/1 PUT /researchers/1.xml\n"],["update","StorageLocationsController","StorageLocationsController.html#method-i-update","()","<p>PUT /storage_locations/1 PUT /storage_locations/1.xml\n"],["update","SynthOligosController","SynthOligosController.html#method-i-update","()","<p>PUT /synth_oligos/1\n"],["update","UsersController","UsersController.html#method-i-update","()",""],["update","VectorsController","VectorsController.html#method-i-update","()","<p>PUT /vectors/1\n"],["update","VersionsController","VersionsController.html#method-i-update","()","<p>PUT /versions/1\n"],["upload_column","UploadColumn::ActiveRecordExtension::ClassMethods","UploadColumn/ActiveRecordExtension/ClassMethods.html#method-i-upload_column","(name, options = {})","<p>handle the <code>attr</code> attribute as an “upload-column” field,\ngenerating additional methods as explained …\n"],["upload_column_field","UploadColumn::UploadColumnHelper","UploadColumn/UploadColumnHelper.html#method-i-upload_column_field","(object, method, options={})","<p>Returns an input tag of the “file” type tailored for accessing an\nupload_column field (identified …\n"],["upload_form_for","UploadColumn::UploadColumnHelper","UploadColumn/UploadColumnHelper.html#method-i-upload_form_for","(*args, &block)","<p>A helper method for creating a form tag to use with uploadng files, it\nworks exactly like Rails’ form_for …\n"],["upload_form_tag","UploadColumn::UploadColumnHelper","UploadColumn/UploadColumnHelper.html#method-i-upload_form_tag","(url_for_options = {}, options = {}, *parameters_for_url, &proc)","<p>A helper method for creating a form tag to use with uploadng files, it\nworks exactly like Rails’ form_tag …\n"],["url","UploadColumn::UploadedFile","UploadColumn/UploadedFile.html#method-i-url","()",""],["url_for_path","UploadColumn::ActionControllerExtension","UploadColumn/ActionControllerExtension.html#method-i-url_for_path","(path)",""],["url_for_with_uploaded_file_check","UploadColumn::ActionControllerExtension","UploadColumn/ActionControllerExtension.html#method-i-url_for_with_uploaded_file_check","(options = {}, *parameters_for_method_reference)",""],["url_options_authenticate?","RoleRequirementSystem::RoleSecurityInstanceMethods","RoleRequirementSystem/RoleSecurityInstanceMethods.html#method-i-url_options_authenticate-3F","(params = {})","<p>receives a :controller, :action, and :params.  Finds the given controller\nand runs user_authorized_for …\n"],["usel_vector","OligoDesign","OligoDesign.html#method-i-usel_vector","()",""],["user_authorized_for?","RoleRequirementSystem::RoleSecurityClassMethods","RoleRequirementSystem/RoleSecurityClassMethods.html#method-i-user_authorized_for-3F","(user, params = {}, binding = self.binding)","<p>This is the core of RoleRequirement.  Here is where it discerns if a user\ncan access a controller or …\n"],["user_login","WelcomeController","WelcomeController.html#method-i-user_login","()",""],["users_fixture_filename","RolesGenerator","RolesGenerator.html#method-i-users_fixture_filename","()",""],["users_foreign_key","RolesGenerator","RolesGenerator.html#method-i-users_foreign_key","()",""],["users_model_filename","RoleGeneratorHelpers","RoleGeneratorHelpers.html#method-i-users_model_filename","()",""],["users_name","RoleGeneratorHelpers","RoleGeneratorHelpers.html#method-i-users_name","()",""],["validates_integrity_of","UploadColumn::ActiveRecordExtension::ClassMethods","UploadColumn/ActiveRecordExtension/ClassMethods.html#method-i-validates_integrity_of","(*attr_names)","<p>Validates whether the images extension is in the array passed to\n:extensions. By default this is the …\n"],["vector","OligoDesign","OligoDesign.html#method-i-vector","()",""],["verify_utf8","YamlDb","YamlDb.html#method-c-verify_utf8","()",""],["version_id_flagged_name","Version","Version.html#method-i-version_id_flagged_name","()",""],["version_id_name","Version","Version.html#method-i-version_id_name","()",""],["version_id_or_default","Version","Version.html#method-c-version_id_or_default","(id_num)",""],["version_name","ApplicationHelper","ApplicationHelper.html#method-i-version_name","(version_id)",""],["well_coord","PlatePosition","PlatePosition.html#method-i-well_coord","()",""],["zip_download","OligoDesignsController","OligoDesignsController.html#method-i-zip_download","()","<p>*******************************************************************************************#\n\n<pre>Method for ...</pre>\n"],["README_FOR_APP","","doc/README_FOR_APP.html","","<p>OligoMgmt is a web-based application for managing oligonucleotides and\nassociated pools, for targeted …\n"]]}}